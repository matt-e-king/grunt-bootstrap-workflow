{
  "name": "grunt-mcompile",
  "description": "Plugin to compile mustache templates as static html",
  "version": "0.1.2",
  "homepage": "https://github.com/JohnCashBB/grunt-mcompile",
  "author": {
    "name": "John Cashmore",
    "email": "j.cashmore@building-blocks.com"
  },
  "repository": {
    "type": "git",
    "url": "git://github.com/JohnCashBB/grunt-mcompile.git"
  },
  "bugs": {
    "url": "https://github.com/JohnCashBB/grunt-mcompile/issues"
  },
  "licenses": [
    {
      "type": "MIT",
      "url": "https://github.com/JohnCashBB/grunt-mcompile/blob/master/LICENSE-MIT"
    }
  ],
  "main": "Gruntfile.js",
  "engines": {
    "node": ">= 0.8.0"
  },
  "scripts": {
    "test": "grunt test"
  },
  "devDependencies": {
    "grunt-contrib-jshint": "~0.1.1",
    "grunt-contrib-clean": "~0.4.0",
    "grunt-contrib-nodeunit": "~0.1.2",
    "grunt": "~0.4.1",
    "jquery": "~1.8.3",
    "cheerio": "~0.12.0",
    "mu2": "~0.5.19",
    "mustache": "~0.7.2"
  },
  "peerDependencies": {
    "grunt": "~0.4.1"
  },
  "keywords": [
    "gruntplugin",
    "mustache",
    "compile",
    "front end",
    "build"
  ],
  "readme": "grunt-mcompile\n==============\n\n>   Plugin to compile mustache templates as static html\n\nGetting Started This plugin requires Grunt `~0.4.1`\n---------------------------------------------------\n\nIf you haven't used [Grunt](<http://gruntjs.com/>) before, be sure to check out\nthe [Getting Started](<http://gruntjs.com/getting-started>) guide, as it\nexplains how to create a [Gruntfile](<http://gruntjs.com/sample-gruntfile>) as\nwell as install and use Grunt plugins. Once you're familiar with that process,\nyou may install this plugin with this command:\n\n```\nshell npm install grunt-mcompile --save-dev\n```\n\nOnce the plugin has been installed, it may be enabled inside your Gruntfile with\nthis line of JavaScript:\n\n```\njs grunt.loadNpmTasks('grunt-mcompile');\n```\n\nThe \"mcompile\" task\n-------------------\n\n### Overview In your project's Gruntfile, add a section named `mcompile` to the data object passed into `grunt.initConfig()`.\n\n```\njs grunt.initConfig({\n\tmcompile: {\n\t\toptions: {   // Task-specific options go here. },\n\t\tyour_target: {   // Target-specific file lists and/or options go here. },\n\t},\n})\n```\n\n### Options\n\n#### options.templateRoot Type: `String` Default value: `''`\n\nA string value that is used to do has the root location of your mustache\ntemplate files.\n\n#### options.dataRoot Type: `String` Default value: `''`\n\nA string value that is used to do has the root location of your mustache\ndata files.\n\n### Usage Examples\n\n#### Default Options\n\n```\njs grunt.initConfig({\n\tmcompile: {\n\t\toptions: {},\n\t\tfiles: {\n\t\t\t'dest/': [src/*.html'],\n\t\t},\n\t},\n})\n```\n\n#### Custom Options\n\n```\njs grunt.initConfig({\n\tmcompile: {\n\t\toptions: {\n\t\t\ttemplateRoot: '_data/templates/',\n\t\t\tdataRoot: '_data/json/',\n\t\t},\n\t\tfiles: {\n\t\t\t'dest/' : ['src/*.html'],\n\t\t},\n\t},\n})\n```\n\nUsage\n-----\n\nTo use the task simply add the data attributes in your source html as follows.\n\n```\n<div data-mustacheTemplate=\"_data/test.mustache\" data-mustacheData=\"_data/test.json\">No JS data</div>\n```\n\nThe element will be replaced with the mustache template.\n\n\n\nContributing In lieu of a formal styleguide, take care to maintain the existing coding style. Add unit tests for any new or changed functionality. Lint and test your code using [Grunt](<http://gruntjs.com/>).\n\nRelease History _(Nothing yet)_\n-------------------------------\n",
  "readmeFilename": "README.md",
  "_id": "grunt-mcompile@0.1.2",
  "_from": "grunt-mcompile@"
}
